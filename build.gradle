plugins {
    id 'org.springframework.boot' version '2.5.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'org.asciidoctor.jvm.convert' version '3.3.0'
    id 'io.freefair.lombok' version '6.0.0-m2'
    id 'jacoco'
}

group = 'com.demo'
version = '0.0.1'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    if (project.hasProperty("mongo-embed")) {
        implementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    } else {
        testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    }
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-webtestclient'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

tasks.register('createProperties', CreatePropertiesTask) {
    path = "$buildDir/resources/main/version.yml"
}

createProperties {
    dependsOn processResources
}

classes {
   dependsOn createProperties
}

asciidoctor {
    dependsOn test
    sourceDir 'src/docs/asciidoc'
    attributes \
        'snippets': file('build/snippets')
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
        html.enabled false
    }
}

jar {
    enabled = false
}

bootJar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}") {
        into 'static/docs'
    }
}
